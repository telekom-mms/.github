---
name: Release

on:
  workflow_call:
    inputs:
      files:
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    name: create release draft
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@385a2a0b6abf6c2efeb95adfac83d96d6f968e0c" # v1.3.0
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@fda4b8e4017bee5dd5794f255a4d484e8e647561 # v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@b25e89c9410e03189f0d48b02b3a8caad6e78015 # v1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          future_release: ${{ steps.version.outputs.next-version }}

      - name: download files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: ${{ inputs.files }}
        if: ${{ inputs.files != '' }}

      # the token is needed so the github app can push to the repository
      # the github app can bypass the branch protection rule (need a PR to merge)
      # this way it can directly commit to main
      - name: Obtain a GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_BRANCH_PROTECTION_APP_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo token=${TOKEN} >> $GITHUB_OUTPUT

      - name: update and push due to new release
        uses: github-actions-x/commit@722d56b8968bf00ced78407bbe2ead81062d8baa # v2.9
        with:
          # use the token obtained in the step before
          github-token: ${{ steps.githubAppAuth.outputs.token }}
          push-branch: 'main'
          commit-message: 'update due to new release'
          force-add: 'true'
          files: CHANGELOG.md ${{ inputs.files }} # empty string if not set
          name: Deutsche Telekom MMS
          email: mms@telekom.de

      # do a second checkout to prevent race situation
      # changelog gets updated but action works on old commit id
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: main

      - name: Generate changelog for the release
        run: |
          sed '/## \[${{ steps.previoustag.outputs.tag }}\]/Q' CHANGELOG.md > CHANGELOGRELEASE.md

      - name: Read CHANGELOG.md
        id: package
        uses: juliangruber/read-file-action@02bbba9876a8f870efd4ad64e3b9088d3fb94d4b # v1
        with:
          path: ./CHANGELOGRELEASE.md

      - name: Create Release draft
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          release_name: ${{ steps.version.outputs.next-version }}
          tag_name: ${{ steps.version.outputs.next-version }}
          body: |
            ${{ steps.package.outputs.content }}
          draft: true
