---
name: Terratest

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_SECRET:
        description: 'application password'
        required: false
      AZURE_CLIENT_ID:
        description: 'application id'
        required: false
      AZURE_SUBSCRIPTION_ID:
        description: 'subscription id'
        required: false
      AZURE_TENANT_ID:
        description: 'tenant id'
        required: false
    inputs:
      test:
        description: name of the test to run e.g. azure
        type: string
        required: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        example:
          - min
          - full

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false # disable wrap of subsequent calls - like debug mode

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20
          check-latest: true

      - name: Prepare ${{ matrix.example }} Test Setup
        run: cat examples/${{ matrix.example }}_main.tf | sed 's/\<source\>.*/source = "..\/"/g' > tests/main.tf
        working-directory: .

      - name: Checkout Github Action
        uses: actions/checkout@v3
        with:
          repository: T-Systems-MMS/terratest-action
          ref: main
          path: ./terratest-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Test for ${{ matrix.example }} Setup
        uses: ./terratest-action
        with:
          test: ${{ inputs.test }}
        env:
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
